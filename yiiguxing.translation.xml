<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="514" />
    <option name="newTranslationDialogX" value="773" />
    <option name="newTranslationDialogY" value="663" />
    <histories>
      <item value="is Fission" />
      <item value="isFission" />
      <item value="裂变的" />
      <item value="&#9;&#9;public static final int SET_CODE_FOR_DRAW = 15;&#9;//抽奖更改兑奖码状态&#10;" />
      <item value="fission" />
      <item value="fiss" />
      <item value="cheat" />
      <item value="cheta" />
      <item value="ch" />
      <item value="识别" />
      <item value="preserve" />
      <item value="The annotated element must be a strictly positive number (i.e. 0 is considered as an invalid value)." />
      <item value="The annotated element must be a strictly negative number (i.e. 0 is considered as an invalid value)." />
      <item value="Interface used to indicate that a bean should &lt;em&gt;run&lt;em&gt; when it is contained within a {@link SpringApplication}. Multiple {@link ApplicationRunner} beans can be defined within the same application context and can be ordered using the {@link Ordered} interface or {@link Order @Order} annotation." />
      <item value="Build a common Caffeine Cache instance for the specified cache name, using the common Caffeine configuration specified on this cache manager. @param name the name of the cache @return the native Caffeine Cache instance @see createCaffeineCache" />
      <item value="Build a common Caffeine Cache instance for the specified cache name, using the common Caffeine configuration specified on this cache manager." />
      <item value="&lt;p&gt;{@code RuntimeException} and its subclasses are &lt;em&gt;unchecked exceptions&lt;em&gt;. Unchecked exceptions do &lt;em&gt;not&lt;em&gt; need to be declared in a method or constructor's {@code throws} clause if they can be thrown by the execution of the method or constructor and propagate outside the method or constructor boundary." />
      <item value="领导" />
      <item value="lingdao" />
      <item value="封装" />
      <item value="主键" />
      <item value="encrypt" />
      <item value="en" />
      <item value="区分" />
      <item value="Register the given native Caffeine Cache instance with this cache manager, adapting it to Spring's cache API for exposure through {@link getCache}. Any number of such custom caches may be registered side by side. &lt;p&gt;This allows for custom settings per cache (as opposed to all caches sharing the common settings in the cache manager's configuration) and is typically used with the Caffeine builder API: {@code registerCustomCache(&quot;myCache&quot;, Caffeine.newBuilder().maximumSize(10).build())} &lt;p&gt;Note that any other caches, whether statically specified through {@link setCacheNames} or dynamically built on demand, still operate with the common settings in the cache manager's configuration." />
      <item value="Set the Caffeine to use for building each individual" />
      <item value="Construct a static CaffeineCacheManager, managing caches for the specified cache names only." />
      <item value="Set the Caffeine cache specification String to use for building each individual {@link CaffeineCache} instance. The given value needs to comply with Caffeine's {@link CaffeineSpec} (see its javadoc)." />
      <item value="Whether all the entries inside the cache(s) are removed. &lt;p&gt;By default, only the value under the associated key is removed. &lt;p&gt;Note that setting this parameter to {@code true} and specifying a {@link key} is not allowed." />
      <item value="分离" />
      <item value="f" />
      <item value="额外" />
      <item value="Burry" />
      <item value="A container for settings for the generation of getters and setters. &lt;p&gt; Complete documentation is found at &lt;a href=&quot;https:projectlombok.orgfeaturesexperimentalAccessors&quot;&gt;the project lombok features page for &amp;64;Accessors&lt;a&gt;. &lt;p&gt; Using this annotation does nothing by itself; an annotation that makes lombok generate getters and setters, such as {@link lombok.Setter} or {@link lombok.Data} is also required." />
      <item value="Use {@code var} as the type of any local variable declaration (even in a {@code for} statement), and the type will be inferred from the initializing expression (any further assignments to the variable are not involved in this type inference). &lt;p&gt; For example: {@code var x = 10.0;} will infer {@code double}, and {@code var y = new ArrayList&lt;String&gt;();} will infer {@code ArrayList&lt;String&gt;}. &lt;p&gt; Note that this is an annotation type because {@code var x = 10;} will be desugared to {@code @var int x = 10;} &lt;p&gt; Complete documentation is found at &lt;a href=&quot;https:projectlombok.orgfeaturesvar&quot;&gt;the project lombok features page for &amp;64;var&lt;a&gt;." />
      <item value="Lombok will eventually automatically add this annotation to all generated constructors, methods, fields, and types. You can mark the presence of this annotation as 'ignore it' for all code style and bug finding tools. &lt;p&gt; NB: As of v1.16.2 which introduces this annotation, lombok doesn't actually add this annotation; we're setting it up so that lombok jars in widespread use start having this, which will make it easier to actually apply it later on. By adding {@code lombok.addLombokGeneratedAnnotation = true} to {@code lombok.config} you can already get this behavior." />
      <item value="Eagerly load the NestedExceptionUtils class to avoid classloader deadlock issues on OSGi when calling getMessage(). Reported by Don Brown; SPR-5607." />
      <item value="struction" />
      <item value="str" />
      <item value="stur" />
      <item value="sr" />
      <item value="Should be used at package level in association with {@link Nullable} annotations at parameter and return value level." />
      <item value="Malformed argument has embedded quote: -Djava.endorsed.dirs=\&quot;\&quot;" />
      <item value="Default typically equals {@link NO}, unless a different default has been configured at the component-scan instruction level." />
      <item value="Configure the behaviour of how this member is treated in the {@code equals} and {@code hashCode} implementation; if on a method, include the method's return value as part of calculating hashCodeequality." />
      <item value="@return If {@code true}, always use direct field access instead of calling the getter method." />
      <item value="Normally, if getters are available, those are called. To suppress this and let the generated code use the fields directly, set this to {@code true}." />
      <item value="Will soon be marked {@code @Deprecated}; use the {@code @EqualsAndHashCode.Include} annotation together with {@code @EqualsAndHashCode(onlyExplicitlyIncluded = true)}." />
      <item value="Inspection" />
      <item value="DTO for presenting and selecting an itinerary from a collection of candidates." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="371" />
        <entry key="ENGLISH" value="369" />
        <entry key="GERMAN" value="2" />
        <entry key="FRENCH" value="1" />
        <entry key="GUJARATI" value="1" />
        <entry key="GALICIAN" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="SWEDISH" value="1" />
        <entry key="WELSH" value="1" />
        <entry key="HINDI" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1629883080454" />
  </component>
</application>